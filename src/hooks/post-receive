#!/bin/bash

update_nginx() {
  echo "Configuration changes detected. Updating..."

  if [ -f $GIT_WORK_TREE/CNAME ]; then
    CNAME=$(cat $GIT_WORK_TREE/CNAME)
  fi

  cat >/home/git/nginxconfs/$GL_REPO.conf <<EOF
# DO NOT MODIFY THIS FILE
server {
  listen 80;
  server_name $GL_REPO.$DOMAIN $CNAME;

  root $GIT_WORK_TREE;
  index index.html;

  error_page 404 /404.html;
  error_page 403 /403.html;
  location /.git {
    deny all;
  }
  location /CNAME {
    deny all;
  }
}
EOF
  sudo /etc/init.d/nginx reload | grep "silence!!"
}

if [ $GL_REPO = "gitolite-admin" ]; then
  echo "Pushing gitolite-admin. Skipping deployment..."
else
  unset GIT_DIR
  GIT_WORK_TREE=/home/git/www/$GL_REPO
  DOMAIN=$(cat /home/git/gioku/DOMAIN)
  # setup the repo..
  if [ ! -f /home/git/nginxconfs/$GL_REPO.conf ]; then
    echo "First push detected: setting up..."
    git clone -q /home/git/repositories/$GL_REPO.git $GIT_WORK_TREE
    chmod a+rx $GIT_WORK_TREE

    update_nginx
  fi

  echo "Pushing changes to production..."
  cd $GIT_WORK_TREE
  git fetch -q --all
  git reset -q --hard origin/master
  find $GIT_WORK_TREE -type d -exec chmod 755 {} \;
  find $GIT_WORK_TREE -type f -exec chmod 644 {} \;

   if [ -f $GIT_WORK_TREE/CNAME ]; then
    CNAME=$(cat $GIT_WORK_TREE/CNAME)
    if ! grep -q " $CNAME[ ;]" /home/git/nginxconfs/$GL_REPO.conf; then
      echo "Need new CNAME $CNAME"
      update_nginx
    fi
  else
    if ! grep -wq "$GL_REPO.$DOMAIN ;" /home/git/nginxconfs/$GL_REPO.conf; then
      echo "Need remove CNAME"
      update_nginx
    fi
  fi

  echo "Pushed $(git rev-parse HEAD) to production!"
fi
