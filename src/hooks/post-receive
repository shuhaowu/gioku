#!/bin/bash

log() {
  echo "[gioku log]: $@"
}

err() {
  echo "[gioku error]: $@" >&2
}

readonly DOMAIN=$(cat /home/git/gioku/DOMAIN)
readonly NGINX_CONFS_DIR="/home/git/nginxconfs"
readonly WWW_BASE_DIR="/home/git/www"
readonly REPOSITORIES_DIR="/home/git/repositories"

update_nginx() {
  log "Configuration changes detected. Updating environment..."

  if [ -f $WWW_DIR/CNAME ]; then
    CNAME=$(cat $WWW_DIR/CNAME)
  fi

  cat >$NGINX_CONFS_DIR/$GL_REPO.conf <<EOF
# DO NOT MODIFY THIS FILE
server {
  listen 80;
  server_name $GL_REPO.$DOMAIN $CNAME;

  root $GIT_WORK_TREE;
  index index.html;

  error_page 404 /404.html;
  error_page 403 /403.html;
  location /.git {
    deny all;
  }
  location /CNAME {
    deny all;
  }
  location /certs {
    deny all;
  }
}
EOF
  sudo /etc/init.d/nginx reload | grep "silence!!"
}

first_push_setup() {
  log "First push detected. Setting up production environment..."
  git clone -q $REPOSITORIES_DIR/$GL_REPO.git $WWW_DIR
  chmod a+rx $WWW_DIR

  update_nginx
}

update_cname_if_required() {
  if [ -f $WWW_DIR/CNAME ]; then
    CNAME=$(cat $WWW_DIR/CNAME)
    if ! grep -q " $CNAME[ ;]" $NGINX_CONFS_DIR/$GL_REPO.conf; then
      log "Adding CNAME $CNAME"
      update_nginx
    fi
  else
    if ! grep -wq "$GL_REPO.$DOMAIN ;" $NGINX_CONFS_DIR/$GL_REPO.conf; then
      log "Removing CNAME"
      update_nginx
    fi
  fi
}

if [ $GL_REPO = "gitolite-admin" ]; then
  log "Pushing gitolite-admin. Skipping deployment..."
else
  unset GIT_DIR
  GIT_WORK_TREE=$WWW_BASE_DIR/$GL_REPO
  readonly WWW_DIR=$GIT_WORK_TREE
  # setup the repo..
  if [ ! -f $NGINX_CONFS_DIR/$GL_REPO.conf ]; then
    first_push_setup
  fi

  log "Pushing changes to production"
  cd $WWW_DIR
  git fetch -q --all
  git reset -q --hard origin/master
  find $WWW_DIR -type d -exec chmod 755 {} \;
  find $WWW_DIR -type f -exec chmod 644 {} \;

  sudo /home/git/gioku/elevated/handle_certs $GL_REPO
  update_cname_if_required

  log "Pushed $(git rev-parse HEAD) to production!"
fi
