#!/bin/bash

log() {
  echo "[gioku log]: $@"
}

err() {
  echo "[gioku error]: $@" >&2
}

readonly DOMAIN=$(cat /home/git/gioku/DOMAIN)
readonly NGINX_CONFS_DIR="/home/git/nginxconfs"
readonly WWW_BASE_DIR="/home/git/www"
readonly REPOSITORIES_DIR="/home/git/repositories"

update_nginx() {
  log "Updating environment."

  if [ -f $WWW_DIR/CNAME ]; then
    CNAME=$(cat $WWW_DIR/CNAME)
  fi

  if [ -d $WWW_DIR/_certs ]; then
    cat >$NGINX_CONFS_DIR/$GL_REPO.conf <<EOF
# DO NOT MODIFY THIS FILE
server {
  listen 80;
  server_name $CNAME;
  # 301. Because you don't wanna migrate back to no certs.
  return 301 https://$CNAME\$request_uri;
}

server {
  listen 443 ssl;
  server_name $CNAME;

  ssl on;
  ssl_certificate $NGINX_CONFS_DIR/certs/$GL_REPO/cert.pem;
  ssl_certificate_key $NGINX_CONFS_DIR/certs/$GL_REPO/cert.key;

  # Secure default
  ssl_prefer_server_ciphers on;
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  # forward secrecy
  ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-RC4-SHA:ECDHE-RSA-AES128-SHA:AES128-GCM-SHA256:RC4:HIGH:!MD5:!aNULL:!EDH:!CAMELLIA:!PSK:!SRP;
  ssl_session_cache    shared:SSL:10m;
  ssl_session_timeout  10m;
  add_header Strict-Transport-Security max-age=31536000;

  root $WWW_DIR;
  index index.html;

  error_page 404 /404.html;
  error_page 403 /403.html;
  location /.git {
    deny all;
  }
  location /CNAME {
    deny all;
  }
  location /_certs {
    deny all;
  }
}

server {
  listen 80;
  server_name $GL_REPO.$DOMAIN;

  root $WWW_DIR;
  index index.html;

  error_page 404 /404.html;
  error_page 403 /403.html;
  location /.git {
    deny all;
  }
  location /CNAME {
    deny all;
  }
  location /_certs {
    deny all;
  }
}
EOF

  else
    cat >$NGINX_CONFS_DIR/$GL_REPO.conf <<EOF
# DO NOT MODIFY THIS FILE
server {
  listen 80;
  server_name $GL_REPO.$DOMAIN $CNAME;

  root $WWW_DIR;
  index index.html;

  error_page 404 /404.html;
  error_page 403 /403.html;
  location /.git {
    deny all;
  }
  location /CNAME {
    deny all;
  }
  location /_certs {
    deny all;
  }
}
EOF
  fi
  sudo /etc/init.d/nginx reload | grep "silence!!"
}

first_push_setup() {
  log "First push detected. Setting up production environment..."
  git clone -q $REPOSITORIES_DIR/$GL_REPO.git $WWW_DIR
  chmod a+rx $WWW_DIR
}

if [ $GL_REPO = "gitolite-admin" ]; then
  log "Pushing gitolite-admin. Skipping deployment..."
else
  unset GIT_DIR
  GIT_WORK_TREE=$WWW_BASE_DIR/$GL_REPO
  readonly WWW_DIR=$GIT_WORK_TREE
  # setup the repo..
  if [ ! -f $NGINX_CONFS_DIR/$GL_REPO.conf ]; then
    first_push_setup
  fi

  log "Pushing changes to production"
  cd $WWW_DIR
  git fetch -q --all
  git reset -q --hard origin/master
  git clean -fd
  find $WWW_DIR -type d -exec chmod 755 {} \;
  find $WWW_DIR -type f -exec chmod 644 {} \;

  sudo /home/git/gioku/elevated/handle_certs $GL_REPO
  update_nginx

  log "Pushed $(git rev-parse HEAD) to production!"
fi
